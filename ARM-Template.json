{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "networkSecurityGroupName": {
            "type": "string",
            "defaultValue": "generic_nsg",
            "metadata": {
              "description": "Name of the Network Security Group"
            }},
            "adminPassword": {
                "type": "secureString",
                "metadata": {
                  "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
                }
              }
    },
    "resources": [
      {
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2020-06-01",
        "name": "[parameters('networkSecurityGroupName')]",
        "location": "[resourceGroup().location]",
        "properties": {
          "securityRules": [
            {
              "name": "inbound_ssh",
              "properties": {
                "access": "Allow",
                "description": "Inbound SSH access to port 22.",
                "destinationAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefixes": [],
                "destinationApplicationSecurityGroups": null,
                "destinationPortRange": "22",
                "destinationPortRanges": [],
                "direction": "Inbound",
                "priority": 100,
                "Protocol": "TCP",
                "sourceAddressPrefix": "104.128.8.121",
                "sourceAddressPrefixes": [],
                "sourceApplicationSecurityGroups": null,
                "sourcePortRange": "*",
                "sourcePortRanges": []
              }
            },
            {
              "name": "CASG-Rule-104",
              "properties": {
                "access": "Deny",
                "description": "CSS Governance Security Rule.  Deny risky inbound.  https://aka.ms/casg",
                "destinationAddressPrefix": "*",
                "destinationAddressPrefixes": [],
                "destinationApplicationSecurityGroups": null,
                "destinationPortRange": null,
                "destinationPortRanges": [
                  "13",
                  "17",
                  "19",
                  "22",
                  "23",
                  "53",
                  "69",
                  "111",
                  "119",
                  "123",
                  "135",
                  "137",
                  "138",
                  "139",
                  "161",
                  "162",
                  "389",
                  "445",
                  "512",
                  "514",
                  "593",
                  "636",
                  "873",
                  "1433",
                  "1434",
                  "1900",
                  "2049",
                  "2301",
                  "2381",
                  "3268",
                  "3306",
                  "3389",
                  "4333",
                  "5353",
                  "5432",
                  "5800",
                  "5900",
                  "5985",
                  "5986",
                  "6379",
                  "7000",
                  "7001",
                  "7199",
                  "9042",
                  "9160",
                  "9300",
                  "11211",
                  "16379",
                  "26379",
                  "27017"
                ],
                "direction": "Inbound",
                "priority": 204,
                "protocol": "*",
                "sourceAddressPrefix": "Internet",
                "sourceAddressPrefixes": [],
                "sourceApplicationSecurityGroups": null,
                "sourcePortRange": "*",
                "sourcePortRanges": []
              }
            },
            {
              "name": "CASG-Rule-103",
              "properties": {
                "access": "Allow",
                "description": "CSS Governance Security Rule.  Allow SAW inbound.  https://aka.ms/casg",
                "destinationAddressPrefix": "*",
                "destinationAddressPrefixes": [],
                "destinationApplicationSecurityGroups": null,
                "destinationPortRange": "*",
                "destinationPortRanges": [],
                "direction": "Inbound",
                "priority": 103,
                "protocol": "*",
                "provisioningState": "Succeeded",
                "sourceAddressPrefix": "CorpNetSaw",
                "sourceAddressPrefixes": [],
                "sourceApplicationSecurityGroups": null,
                "sourcePortRange": "*",
                "sourcePortRanges": []
              }
            },
            {
              "name": "CASG-Rule-101",
              "properties": {
                "access": "Allow",
                "description": "CSS Governance Security Rule.  Allow vnet inbound.  https://aka.ms/casg",
                "destinationAddressPrefix": "*",
                "destinationAddressPrefixes": [],
                "destinationApplicationSecurityGroups": null,
                "destinationPortRange": "*",
                "destinationPortRanges": [],
                "direction": "Inbound",
                "priority": 101,
                "protocol": "*",
                "provisioningState": "Succeeded",
                "sourceAddressPrefix": "VirtualNetwork",
                "sourceAddressPrefixes": [],
                "sourceApplicationSecurityGroups": null,
                "sourcePortRange": "*",
                "sourcePortRanges": []
              }
            },
            {
              "name": "CASG-Rule-102",
              "properties": {
                "access": "Allow",
                "description": "CSS Governance Security Rule.  Allow Corpnet inbound.  https://aka.ms/casg",
                "destinationAddressPrefix": "*",
                "destinationAddressPrefixes": [],
                "destinationApplicationSecurityGroups": null,
                "destinationPortRange": "*",
                "destinationPortRanges": [],
                "direction": "Inbound",
                "priority": 102,
                "protocol": "*",
                "provisioningState": "Succeeded",
                "sourceAddressPrefix": "CorpNetPublic",
                "sourceAddressPrefixes": [],
                "sourceApplicationSecurityGroups": null,
                "sourcePortRange": "*",
                "sourcePortRanges": []
              }
            },
            {
              "name": "inbound_web",
              "properties": {
                "access": "Allow",
                "description": "Inbound HTTP and HTTPS from home.",
                "destinationAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefixes": [],
                "destinationApplicationSecurityGroups": null,
                "destinationPortRange": null,
                "destinationPortRanges": [
                  "80",
                  "5000"
                ],
                "direction": "Inbound",
                "priority": 104,
                "protocol": "TCP",
                "provisioningState": "Succeeded",
                "sourceAddressPrefix": "104.128.8.121",
                "sourceAddressPrefixes": [],
                "sourceApplicationSecurityGroups": null,
                "sourcePortRange": "*",
                "sourcePortRanges": []
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/virtualNetworks",
        "apiVersion": "2024-03-01",
        "name": "My-Vnet",
        "location": "[resourceGroup().location]",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/16"
            ]
          },
          "subnets": [
            {
              "name": "My-Subnet",
              "properties": {
                "addressPrefix": "10.0.0.0/24"
              }
            }
            ]
        }
      },
      {
        "type": "Microsoft.Network/networkInterfaces",
        "apiVersion": "2024-03-01",
        "name": "WEBvm-nic",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/virtualNetworks', 'My-Vnet')]"
        ],    
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAddress": "10.0.0.4",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', 'My-Vnet', 'My-Subnet')]"
                },
                "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'WebVM-IP')]"
              }
              }
            }
          ],
          "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
            }
        }
      },
      {
        "type": "Microsoft.Network/networkInterfaces",
        "apiVersion": "2024-03-01",
        "name": "DBvm-nic",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/virtualNetworks', 'My-Vnet')]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAddress": "10.0.0.5",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', 'My-Vnet', 'My-Subnet')]"
                }
              }
            }
          ],
          "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
            }
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines",
        "apiVersion": "2024-03-01",
        "name": "WEBvm",
        "location": "[resourceGroup().location]",
        "dependsOn": ["[resourceId('Microsoft.Network/networkInterfaces', 'WEBvm-nic')]"],
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_DS1_v2"
          },
          "osProfile": {
            "computerName": "WEBvm",
            "adminUsername": "azureadmin",
            "adminPassword": "[parameters('adminPassword')]",
            "customData": "c3VkbyBjdXJsIC1zIGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9Db2x0b25EeC9NZW50b3JzaGlwL3JlZnMvaGVhZHMvbWFpbi93ZWJ2bS1kZXBsb3kgfCBzdWRvIGJhc2gK"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', 'WEBvm-nic')]"
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "Canonical",
              "offer": "0001-com-ubuntu-server-jammy",
              "sku": "22_04-lts-gen2",
              "version": "latest"
            },
            "osDisk": {
              "createOption": "FromImage"
            }
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "enabled": true
            }
          }
        }
      },
      {
        "type": "Microsoft.Network/publicIPAddresses",
        "apiVersion": "2020-06-01",
        "name": "WebVM-IP",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "Basic"
        },
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "publicIPAddressVersion": "IPv4",
          "dnsSettings": {
            "domainNameLabel": "[concat('web', uniqueString(resourceGroup().id))]"
          },
          "idleTimeoutInMinutes": 4
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines",
        "apiVersion": "2024-03-01",
        "name": "DBvm",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/networkInterfaces', 'DBvm-nic')]"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_DS1_v2"
          },
          "osProfile": {
            "computerName": "DBvm",
            "adminUsername": "azureadmin",
            "adminPassword": "[parameters('adminPassword')]",
            "customData": "Yc3VkbyBjdXJsIC1zIGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9Db2x0b25EeC9NZW50b3JzaGlwL3JlZnMvaGVhZHMvbWFpbi9kYi1kZXBsb3kgfCBzdWRvIGJhc2gK"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', 'DBvm-nic')]"
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "Canonical",
              "offer": "0001-com-ubuntu-server-jammy",
              "sku": "22_04-lts-gen2",
              "version": "latest"
            },
            "osDisk": {
              "createOption": "FromImage"
            }
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "enabled": true
            }
          }
        }
      }
    ]
  }
  
