#!/bin/bash

# Add repository
sudo add-apt-repository "deb http://archive.ubuntu.com/ubuntu jammy-backports main" -y

# Update package list
sudo apt update -y

# Install necessary packages
sudo apt-get install nginx python3-pip python3-venv -y

# Create and activate virtual environment
#python3 -m venv myenv
#source myenv/bin/activate

# Install Python packages
pip install Flask psycopg2-binary

# Stop nginx
sudo systemctl stop nginx

# Download nginx configuration
sudo curl -o /etc/nginx/sites-available/default https://raw.githubusercontent.com/ColtonDx/Mentorship/refs/heads/Router/Web/nginx

# Start nginx
sudo systemctl start nginx

#Make the Directories
sudo mkdir /myapp
sudo mkdir /myapp/templates

# Download app.py
sudo curl -o /myapp/app.py https://raw.githubusercontent.com/ColtonDx/Mentorship/refs/heads/Router/Flask-App/app.py
sudo curl -o /myapp/templates/index.html https://raw.githubusercontent.com/ColtonDx/Mentorship/refs/heads/Router/Flask-App/index.html


#Download Service File
sudo curl -o /etc/systemd/system/flask-app.service https://raw.githubusercontent.com/ColtonDx/Mentorship/refs/heads/Router/Flask-App/flask-app.service

# Enable and Start the Service
sudo systemctl enable flask-app
sudo systemctl start flask-app

# Restart nginx
sudo systemctl restart nginx

#Firewall Rules
sudo ufw allow 80/tcp
sudo ufw allow proto tcp from 10.0.1.5 to any port 22
sudo ufw enable

#Install AppArmor
sudo apt-get install apparmor-profiles apparmor-utils -y
sudo systemctl stop apparmor

# Create AppArmor profile directory if not exists
sudo mkdir -p /etc/apparmor.d

# Create the AppArmor profile file
sudo tee /etc/apparmor.d/usr.sbin.nginx <<EOT
abi <abi/3.0>
include <tunables/global>

/usr/sbin/nginx {
  include <abstractions/apache2-common>
  include <abstractions/base>
  include <abstractions/openssl>
  capability dac_override,
  /usr/sbin/nginx mr,
  /var/log/nginx/error.log w,
  owner /etc/group r,
  owner /etc/nginx/conf.d/ r,
  owner /etc/nginx/mime.types r,
  owner /etc/nginx/modules-enabled/ r,
  owner /etc/nginx/nginx.conf r,
  owner /etc/nginx/sites-available/default r,
  owner /etc/nginx/sites-enabled/ r,
  owner /etc/nsswitch.conf r,
  owner /etc/passwd r,
  owner /run/nginx.pid rw,
  owner /usr/share/nginx/modules-available/mod-http-geoip2.conf r,
  owner /usr/share/nginx/modules-available/mod-http-image-filter.conf r,
  owner /usr/share/nginx/modules-available/mod-http-xslt-filter.conf r,
  owner /usr/share/nginx/modules-available/mod-mail.conf r,
  owner /usr/share/nginx/modules-available/mod-stream-geoip2.conf r,
  owner /usr/share/nginx/modules-available/mod-stream.conf r,
}
EOT

# Apply the AppArmor profile
sudo apparmor_parser -r -W /etc/apparmor.d/usr.sbin.nginx

# Ensure AppArmor service is enabled and start the service
sudo systemctl enable apparmor
sudo systemctl start
sudo aa-enforce nginx

